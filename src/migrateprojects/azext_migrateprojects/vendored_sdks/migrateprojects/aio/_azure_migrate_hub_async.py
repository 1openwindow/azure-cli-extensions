# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Optional

from azure.core import AsyncPipelineClient
from msrest import Deserializer, Serializer

from ._configuration_async import AzureMigrateHubConfiguration
from .operations_async import DatabaseInstanceOperations
from .operations_async import DatabaseOperations
from .operations_async import EventOperations
from .operations_async import MachineOperations
from .operations_async import MigrateProjectOperations
from .operations_async import SolutionOperations
from .operations_async import OperationOperations
from .. import models


class AzureMigrateHub(object):
    """Migrate your workloads to Azure.

    :ivar database_instance: DatabaseInstanceOperations operations
    :vartype database_instance: azure_migrate_hub.aio.operations_async.DatabaseInstanceOperations
    :ivar database: DatabaseOperations operations
    :vartype database: azure_migrate_hub.aio.operations_async.DatabaseOperations
    :ivar event: EventOperations operations
    :vartype event: azure_migrate_hub.aio.operations_async.EventOperations
    :ivar machine: MachineOperations operations
    :vartype machine: azure_migrate_hub.aio.operations_async.MachineOperations
    :ivar migrate_project: MigrateProjectOperations operations
    :vartype migrate_project: azure_migrate_hub.aio.operations_async.MigrateProjectOperations
    :ivar solution: SolutionOperations operations
    :vartype solution: azure_migrate_hub.aio.operations_async.SolutionOperations
    :ivar operation: OperationOperations operations
    :vartype operation: azure_migrate_hub.aio.operations_async.OperationOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: azure.core.credentials.TokenCredential
    :param subscription_id: Azure Subscription Id in which migrate project was created.
    :type subscription_id: str
    :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
    :type accept_language: str
    :param str base_url: Service URL
    """

    def __init__(
        self,
        credential: "TokenCredential",
        subscription_id: str,
        accept_language: Optional[str] = None,
        base_url: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        if not base_url:
            base_url = 'https://management.azure.com'
        self._config = AzureMigrateHubConfiguration(credential, subscription_id, accept_language, **kwargs)
        self._client = AsyncPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.database_instance = DatabaseInstanceOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.database = DatabaseOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.event = EventOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.machine = MachineOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.migrate_project = MigrateProjectOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.solution = SolutionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.operation = OperationOperations(
            self._client, self._config, self._serialize, self._deserialize)

    async def close(self) -> None:
        await self._client.close()

    async def __aenter__(self) -> "AzureMigrateHub":
        await self._client.__aenter__()
        return self

    async def __aexit__(self, *exc_details) -> None:
        await self._client.__aexit__(*exc_details)
